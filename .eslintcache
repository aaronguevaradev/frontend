[{"/Users/aaronguevara/Documents/dev/frontend/src/reportWebVitals.tsx":"1","/Users/aaronguevara/Documents/dev/frontend/src/App.tsx":"2","/Users/aaronguevara/Documents/dev/frontend/src/comps/LoanApplication/LoanApplication.tsx":"3","/Users/aaronguevara/Documents/dev/frontend/src/theme.ts":"4","/Users/aaronguevara/Documents/dev/frontend/src/index.tsx":"5"},{"size":425,"mtime":1608994880748,"results":"6","hashOfConfig":"7"},{"size":434,"mtime":1608994880672,"results":"8","hashOfConfig":"7"},{"size":3511,"mtime":1609598820728,"results":"9","hashOfConfig":"7"},{"size":397,"mtime":1608994880648,"results":"10","hashOfConfig":"7"},{"size":849,"mtime":1608994880736,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gqmaow",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aaronguevara/Documents/dev/frontend/src/reportWebVitals.tsx",[],"/Users/aaronguevara/Documents/dev/frontend/src/App.tsx",[],"/Users/aaronguevara/Documents/dev/frontend/src/comps/LoanApplication/LoanApplication.tsx",["23"],"import React, { FunctionComponent } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\n\ninterface IProps {\n  userLoggedIn: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n);\n\ninterface State {\n  purchasePrice: string;\n  autoMake: string;\n  autoModel: string;\n  income: string;\n  creditScore: string;\n}\n\nconst LoanApplication: FunctionComponent<IProps> = (props) => {\n  const { userLoggedIn } = props;\n\n  const classes = useStyles();\n  const [values, setValues] = React.useState<State>({\n    purchasePrice: \"\",\n    autoMake: \"\",\n    autoModel: \"\",\n    income: \"\",\n    creditScore: \"\",\n  });\n\n  const handleChange = (prop: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <h1>CUNA Mutual - Loan Application</h1>\n      </div>\n      <div>\n        <FormControl fullWidth={true} className={classes.margin}>\n          <InputLabel htmlFor=\"standard-adornment-amount\">\n            Auto Purchase Price\n          </InputLabel>\n          <Input\n            id=\"standard-adornment-amount\"\n            value={values.purchasePrice}\n            onChange={handleChange(\"purchasePrice\")}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl fullWidth={true} className={classes.margin}>\n          <TextField\n            onChange = {() => {return 0}}\n            id=\"standard-number\"\n            label=\"Auto Make\"\n            value={values.autoMake}\n            type=\"text\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n        <FormControl fullWidth={true} className={clsx(classes.margin)}>\n          <TextField\n            id=\"standard-number\"\n            label=\"Auto Model\"\n            value={values.autoModel}\n            type=\"text\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n        <FormControl fullWidth={true} className={classes.margin}>\n          <InputLabel htmlFor=\"standard-adornment-amount\">\n            User Estimated Yearly Income\n          </InputLabel>\n          <Input\n            id=\"standard-adornment-amount\"\n            value={values.income}\n            onChange={handleChange(\"income\")}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n\n        <FormControl fullWidth={true} className={classes.margin}>\n          <TextField\n            id=\"standard-number\"\n            label=\"User Estimated Credit Score\"\n            type=\"number\"\n            helperText=\"Please enter your credit score (300-850)\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default LoanApplication;\n","/Users/aaronguevara/Documents/dev/frontend/src/theme.ts",[],"/Users/aaronguevara/Documents/dev/frontend/src/index.tsx",[],{"ruleId":"24","severity":1,"message":"25","line":41,"column":11,"nodeType":"26","messageId":"27","endLine":41,"endColumn":23},"@typescript-eslint/no-unused-vars","'userLoggedIn' is assigned a value but never used.","Identifier","unusedVar"]